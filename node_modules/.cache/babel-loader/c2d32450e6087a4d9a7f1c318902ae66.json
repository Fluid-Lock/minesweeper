{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Javascript learn\\\\learnReact\\\\app\\\\src\\\\App.jsx\";\nimport React from 'react';\n\nfunction video() {\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video\",\n    autoPlay: true,\n    loop: true,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: \"video.mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nfunction mBox(val) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    value: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Score() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Score : \", /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"scoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Score;\n\nfunction Grid() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: Data.map(mBox)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = Grid;\n\nfunction Box(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box boxing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element fade\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Box;\n\nfunction Buttons() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"butContain\",\n    children: [/*#__PURE__*/_jsxDEV(But, {\n      id: \"rst\",\n      value: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(But, {\n      id: \"gold\",\n      value: \"Show All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = Buttons;\n\nfunction But(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: props.id,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_c5 = But;\nlet numbered = [];\nlet bombs = [];\n\nfor (let i = 0; i < 85; i++) {\n  numbered[i] = Math.floor(Math.random() * 4);\n}\n\nfor (let i = 0; i < 15; i++) {\n  bombs[i] = 'p';\n}\n\nconst shuffle = numbered.concat(bombs); // Random Array Algorithm\n\nconst shuffleData = array => {\n  for (let i = array.length; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[j] = temp;\n  }\n\n  return array;\n};\n\nlet Data = shuffleData(shuffle);\nexport default video;\nexport { Grid, Score, Buttons, shuffle, Data };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Score\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Box\");\n$RefreshReg$(_c4, \"Buttons\");\n$RefreshReg$(_c5, \"But\");","map":{"version":3,"sources":["D:/Javascript learn/learnReact/app/src/App.jsx"],"names":["React","video","mBox","val","Score","Grid","Data","map","Box","props","value","Buttons","But","id","numbered","bombs","i","Math","floor","random","shuffle","concat","shuffleData","array","length","j","temp"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction video () {\r\n    return (\r\n        <video className=\"video\" autoPlay loop>\r\n            <source src=\"video.mp4\"></source>\r\n        </video>\r\n    )\r\n}\r\n\r\nfunction mBox (val) {\r\n    return (\r\n        <Box value={val}></Box>\r\n    )\r\n}\r\n\r\nfunction Score () {\r\n    return (\r\n        <h1>Score : <span id=\"scoring\"></span></h1>\r\n    )\r\n}\r\n\r\nfunction Grid () {\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                {Data.map(mBox)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction Box (props) {\r\n    return (\r\n        <div className=\"box boxing\">\r\n            <div className=\"element fade\">\r\n                <p>{props.value}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Buttons () {\r\n    return (\r\n        <div className=\"butContain\">\r\n            <But id=\"rst\" value=\"Reset\"></But>\r\n            <But id=\"gold\" value=\"Show All\"></But>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction But (props) {\r\n    return (\r\n        <button id={props.id}>{props.value}</button>\r\n    )\r\n}\r\n\r\nlet numbered = [];\r\nlet bombs = [];\r\nfor (let i = 0; i < 85; i++) {\r\n    numbered[i] = Math.floor(Math.random() * 4);\r\n}\r\nfor (let i = 0; i < 15; i++) {\r\n    bombs[i] = 'p';\r\n}    \r\n\r\nconst shuffle = numbered.concat(bombs);\r\n\r\n// Random Array Algorithm\r\nconst shuffleData = array => {\r\n    for (let i = array.length; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\nlet Data = shuffleData(shuffle);\r\n\r\n\r\n\r\nexport default video;\r\nexport {Grid , Score, Buttons, shuffle, Data};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Javascript learn\\\\learnReact\\\\app\\\\src\\\\App.jsx\";\nimport React from 'react';\n\nfunction video() {\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video\",\n    autoPlay: true,\n    loop: true,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: \"video.mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nfunction Grid() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = Grid;\nlet numbered = [];\nlet bombs = [];\nlet blank = [];\n\nfor (let i = 0; i < 75; i++) {\n  numbered[i] = Math.floor(Math.random() * 4);\n}\n\nfor (let i = 0; i < 10; i++) {\n  bombs[i] = 'pics.png';\n}\n\nfor (let i = 0; i < 15; i++) {\n  blank[i] = \" \";\n}\n\nconst shuffle = numbered.concat(bombs, blank); // Random Array Algorithm\n\nconst shuffleData = array => {\n  for (let i = array.length; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[j] = temp;\n  }\n\n  return array;\n};\n\nlet Data = shuffleData(shuffle);\nexport default video;\nexport { Grid };\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["D:/Javascript learn/learnReact/app/src/App.jsx"],"names":["React","video","Grid","numbered","bombs","blank","i","Math","floor","random","shuffle","concat","shuffleData","array","length","j","temp","Data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,KAAT,GAAkB;AACd,sBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,MAAtC;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,SAASC,IAAT,GAAiB;AACb,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH;;KARQA,I;AAUT,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,KAAK,GAAG,EAAZ;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBH,EAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAd;AACH;;AACD,KAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBF,EAAAA,KAAK,CAACE,CAAD,CAAL,GAAW,UAAX;AACH;;AACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,EAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,GAAX;AAEH;;AACD,MAAMI,OAAO,GAAGP,QAAQ,CAACQ,MAAT,CAAgBP,KAAhB,EAAuBC,KAAvB,CAAhB,C,CAEA;;AACA,MAAMO,WAAW,GAAGC,KAAK,IAAI;AACzB,OAAK,IAAIP,CAAC,GAAGO,KAAK,CAACC,MAAnB,EAA2BR,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,UAAMS,CAAC,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMU,IAAI,GAAGH,KAAK,CAACP,CAAD,CAAlB;AACAO,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWC,IAAX;AACH;;AACD,SAAOH,KAAP;AACH,CAPD;;AASA,IAAII,IAAI,GAAGL,WAAW,CAACF,OAAD,CAAtB;AAGA,eAAeT,KAAf;AACA,SAAQC,IAAR","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction video () {\r\n    return (\r\n        <video className=\"video\" autoPlay loop>\r\n            <source src=\"video.mp4\"></source>\r\n        </video>\r\n    )\r\n}\r\n\r\nfunction Grid () {\r\n    return (\r\n        <>\r\n            <div className=\"grid\">\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nlet numbered = [];\r\nlet bombs = [];\r\nlet blank = [];\r\nfor (let i = 0; i < 75; i++) {\r\n    numbered[i] = Math.floor(Math.random() * 4);\r\n}\r\nfor (let i = 0; i < 10; i++) {\r\n    bombs[i] = 'pics.png';\r\n}\r\nfor (let i = 0; i < 15; i++) {\r\n    blank[i] = \" \";\r\n    \r\n}\r\nconst shuffle = numbered.concat(bombs, blank);\r\n\r\n// Random Array Algorithm\r\nconst shuffleData = array => {\r\n    for (let i = array.length; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\n\r\nlet Data = shuffleData(shuffle);\r\n\r\n\r\nexport default video;\r\nexport {Grid};"]},"metadata":{},"sourceType":"module"}